name: Release
on:
  push:
    branches:
      - master
jobs:
  release:
    runs-on: ubuntu-latest
    if: "startsWith(github.event.commits[0].message, 'chore(release): trigger release process [ci release]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Install project
        run: npm ci
      - name: Release as major
        if: endsWith(github.event.commits[0].message, '[ci release][major]')
        run: npm run release-ci -- --release-as major
      - name: Release as minor
        if: endsWith(github.event.commits[0].message, '[ci release][minor]')
        run: npm run release-ci -- --release-as minor
      - name: Release as patch
        if: endsWith(github.event.commits[0].message, '[ci release][patch]')
        run: npm run release-ci -- --release-as patch
      - name: Release
        if: endsWith(github.event.commits[0].message, '[ci release]')
        run: npm run release-ci
      - name: Publish
        run: echo 'Publish this version!'
  prevent_failed_status:
    name: Prevent failed status when skipped
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Prevent failed status when skipped
        run: |
          echo "Run this job to prevent the workflow status from showing as failed when all other jobs are skipped."
          echo "building SHA '${GITHUB_SHA}'"
          git --version
          echo "THe banch is $(git branch --show-current)"
          git branch --show-current
