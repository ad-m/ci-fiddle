name: Release
on:
  push:
    branches:
      - master
jobs:
  release:
    runs-on: ubuntu-latest
    env:
      MESSAGE: ${{ github.event.commits[0].message }}
    if: |
      startsWith(github.event.commits[0].message,
          'chore(release): trigger release process [ci release]')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch tags
        run: git fetch --tags
      - name: Setup Git user
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Install project
        run: npm ci
      - name: Validate release type
        if: |
          !(endsWith(env.MESSAGE, '[ci release]') ||
            endsWith(env.MESSAGE, '[ci release][major]') ||
            endsWith(env.MESSAGE, '[ci release][minor]') ||
            endsWith(env.MESSAGE, '[ci release][patch]'))
        run: |
          echo 'Could not determine release type based on message'
          exit 1
      - name: Release as
        if: |
          endsWith(env.MESSAGE, '[ci release][major]') ||
          endsWith(env.MESSAGE, '[ci release][minor]') ||
          endsWith(env.MESSAGE, '[ci release][patch]')
        run: |
          echo "Message: '${{ env.MESSAGE }}'"
          readonly COMMIT_MESSAGE="${{ env.MESSAGE }}"
          echo "Message: '${COMMIT_MESSAGE}'"

          readonly RELEASE_TYPE="${COMMIT_MESSAGE: -6: -1}"
          # readonly RELEASE_TYPE="minor"
          echo "::set-env name=NEXT_VERSION::2.99.0"
          npx --no-install standard-version --release-as "${RELEASE_TYPE}"
      - name: Release
        if: endsWith(github.event.commits[0].message, '[ci release]')
        run: |
          echo "::set-env name=NEXT_VERSION::$(next-standard-version)"
          npx --no-install standard-version
      - name: Publish release
        run: git push --follow-tags
      - name: Publish GitHub release
        uses: actions/create-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.NEXT_VERSION }}
          release_name: v${{ env.NEXT_VERSION }}
          body: |
            See the the [changelog](
              https://github.com/${{ github.repository }}/blob/master/CHANGELOG.md
            ) for the changes included in this release.
  prevent_failed_status:
    name: Prevent failed status when skipped
    runs-on: ubuntu-latest
    steps:
      - name: Prevent failed status when skipped
        run: echo "Run this job to prevent the workflow status from showing as failed when all other jobs are skipped."
