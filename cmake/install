#!/bin/bash

set -e
# Install GNU ARM Embedded Toolchain, including dependencies, and add it to the path.
#
# Name                          | Location
# ----------------------------- | ----------
# lib32bz1                      | default
# lib32ncurses5                 | default
# lib32bz2-1.0                  | default
# libarchive-zip-perl           | default
# gcc-arm-none-eabi-4_9-2015q3  | /usr/local
# ------------------------------------------
#
# Author   : Jeroen de Bruijn
# Date     : 16 February 2017, 22:02
# Version  : 1.3
#
# Changelog
# Changes since v1.2
#   - Remove unnecessary sudo.
#   - Use -nv instead of --no-verbose because it looks cleaner.
#   - Don't append PATH since it is now set in the Dockerfile. Otherwise would be getting double entries.
# Changes since v1.1
#   - Just append PATH to .bashrc. The path is now also set in the Dockerfile.
# Changes since v1.0
#   - Append PATH to both .bashrc and .profile
# echo "Version: ${CMAKE_VERSION}"

# Get the current working directory, i.e. the directory of this file. All
# credits for this line goes to this guy https://stackoverflow.com/a/246128.
readonly WORKING_DIRECTORY="$(
  cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd
)"

# Source the versions file to 'include' the CMake version list.
source "${WORKING_DIRECTORY}/versions"

readonly BASE_URL='https://github.com/Kitware/CMake/releases/download'

for cmake_version in "${CMAKE_VERSIONS[@]}"; do
  printf "Installing CMake ${cmake_version}... "

  filename="cmake-${cmake_version}-Linux-x86_64"
  archive_filename="${filename}.tar.gz"
  url="${BASE_URL}/v${cmake_version}/${archive_filename}"
  # echo "I've created URL: '${url}'"
  wget -q "${url}"
  # echo 'done'

  tar -xz --file "./${archive_filename}"
  if [[ ! -d "${filename}/bin" ]]; then
    echo "Folder not found ${filename}/bin"
  fi
  if [[ ! -d "${filename}/doc" ]]; then
    echo "Folder not found ${filename}/doc"
  fi
  if [[ ! -d "${filename}/man" ]]; then
    echo "Folder not found ${filename}/man"
  fi
  if [[ ! -d "${filename}/share" ]]; then
    echo "Folder not found ${filename}/share"
  fi

  installed_cmake_version=$(
    "${filename}/bin/cmake" --version | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+'
  )

  if [[ "${installed_cmake_version}" == "${cmake_version}" ]]; then
    echo "Installed CMake (${installed_cmake_version}) doesn't match expected"
         "version (${cmake_version})"
  fi

  rm -r "${filename}"
  rm "${archive_filename}"
  echo "OK"
done

# tar xzf "./${ARCHIVE_FILENAME}"
# ls -la "./${FILENAME}"
#
# cp -R "./${FILENAME}" /usr/local/
# rm -r "./${ARCHIVE_FILENAME}" "./${FILENAME}"
#
# /usr/local/${FILENAME}/bin/cmake --version
